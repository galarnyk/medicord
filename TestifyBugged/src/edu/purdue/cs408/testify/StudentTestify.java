/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.purdue.cs408.testify;

import java.awt.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFileChooser;

/**
 *
 * @author Mechai
 */
public class StudentTestify extends javax.swing.JFrame {

    /**
     * Creates new form StudentTestify
     */
   
    
    public StudentTestify() {
        initComponents();
        nameError.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MultipleChoiceGroup = new javax.swing.ButtonGroup();
        jFrame1 = new javax.swing.JFrame();
        jTextField1 = new javax.swing.JTextField();
        QuestionCards = new javax.swing.JPanel();
        StartExam = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        open = new javax.swing.JButton();
        nameError = new javax.swing.JLabel();
        ShortAnswerCard = new javax.swing.JPanel();
        QuestionPrompt = new javax.swing.JLabel();
        AnswerPrompt = new javax.swing.JLabel();
        QuestionBoxScroll = new javax.swing.JScrollPane();
        QuestionBox = new javax.swing.JTextArea();
        AnswerBoxScroll = new javax.swing.JScrollPane();
        AnswerBox = new javax.swing.JTextArea();
        PointsPossible = new javax.swing.JLabel();
        MultipleChoiceCard = new javax.swing.JPanel();
        QuestionPrompt2 = new javax.swing.JLabel();
        AnswerPrompt2 = new javax.swing.JLabel();
        QuestionBoxScroll2 = new javax.swing.JScrollPane();
        QuestionBox2 = new javax.swing.JTextArea();
        PointsPossible2 = new javax.swing.JLabel();
        MCAnswer1 = new javax.swing.JRadioButton();
        MCAnswer2 = new javax.swing.JRadioButton();
        MCAnswer3 = new javax.swing.JRadioButton();
        MCAnswer4 = new javax.swing.JRadioButton();
        MCAnswer5 = new javax.swing.JRadioButton();
        CodingCard = new javax.swing.JPanel();
        QuestionPrompt1 = new javax.swing.JLabel();
        AnswerPrompt1 = new javax.swing.JLabel();
        QuestionBoxScroll1 = new javax.swing.JScrollPane();
        QuestionBox1 = new javax.swing.JTextArea();
        AnswerBoxScroll1 = new javax.swing.JScrollPane();
        codeBox = new javax.swing.JTextArea();
        PointsPossible1 = new javax.swing.JLabel();
        compileBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        compilerOutput = new javax.swing.JTextPane();
        exitScreen = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        PrevNextControl = new javax.swing.JPanel();
        Previous = new javax.swing.JButton();
        QuestionNumber = new javax.swing.JLabel();
        Next = new javax.swing.JButton();
        Menu = new javax.swing.JMenuBar();

        jTextField1.setText("jTextField1");

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrame1Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 346, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrame1Layout.createSequentialGroup()
                .add(59, 59, 59)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        QuestionCards.setLayout(new java.awt.CardLayout());

        jLabel1.setText("Testify - Student Version");

        firstNameLabel.setText("First Name:");

        firstNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last Name:");

        lastNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextActionPerformed(evt);
            }
        });

        open.setText("Exit Test");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        nameError.setForeground(new java.awt.Color(255, 0, 0));
        nameError.setText("Please enter Both a First and Last Name!");

        org.jdesktop.layout.GroupLayout StartExamLayout = new org.jdesktop.layout.GroupLayout(StartExam);
        StartExam.setLayout(StartExamLayout);
        StartExamLayout.setHorizontalGroup(
            StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, StartExamLayout.createSequentialGroup()
                .addContainerGap(500, Short.MAX_VALUE)
                .add(StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nameError)
                    .add(StartExamLayout.createSequentialGroup()
                        .add(StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lastNameLabel)
                            .add(firstNameLabel))
                        .add(18, 18, 18)
                        .add(StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(open)
                            .add(lastNameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(firstNameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(450, 450, 450))
            .add(StartExamLayout.createSequentialGroup()
                .add(428, 428, 428)
                .add(jLabel1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        StartExamLayout.setVerticalGroup(
            StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(StartExamLayout.createSequentialGroup()
                .add(50, 50, 50)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(59, 59, 59)
                .add(nameError)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(firstNameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(firstNameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(StartExamLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lastNameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lastNameText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(27, 27, 27)
                .add(open)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        QuestionCards.add(StartExam, "card5");

        QuestionPrompt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        QuestionPrompt.setText("Question Prompt");

        AnswerPrompt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        AnswerPrompt.setText("Short Answer");

        QuestionBox.setEditable(false);
        QuestionBox.setColumns(20);
        QuestionBox.setRows(5);
        QuestionBox.setText("Define polymorphism");
        QuestionBoxScroll.setViewportView(QuestionBox);

        AnswerBox.setColumns(20);
        AnswerBox.setRows(5);
        AnswerBoxScroll.setViewportView(AnswerBox);

        PointsPossible.setText("Points: 25");

        org.jdesktop.layout.GroupLayout ShortAnswerCardLayout = new org.jdesktop.layout.GroupLayout(ShortAnswerCard);
        ShortAnswerCard.setLayout(ShortAnswerCardLayout);
        ShortAnswerCardLayout.setHorizontalGroup(
            ShortAnswerCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ShortAnswerCardLayout.createSequentialGroup()
                .addContainerGap()
                .add(ShortAnswerCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(QuestionBoxScroll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1011, Short.MAX_VALUE)
                    .add(AnswerBoxScroll)
                    .add(ShortAnswerCardLayout.createSequentialGroup()
                        .add(QuestionPrompt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 740, Short.MAX_VALUE)
                        .add(PointsPossible))
                    .add(ShortAnswerCardLayout.createSequentialGroup()
                        .add(AnswerPrompt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        ShortAnswerCardLayout.setVerticalGroup(
            ShortAnswerCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ShortAnswerCardLayout.createSequentialGroup()
                .addContainerGap()
                .add(ShortAnswerCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(QuestionPrompt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(PointsPossible))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(QuestionBoxScroll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(AnswerPrompt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(AnswerBoxScroll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        QuestionCards.add(ShortAnswerCard, "ShortAnswer");

        QuestionPrompt2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        QuestionPrompt2.setText("Question Prompt");

        AnswerPrompt2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        AnswerPrompt2.setText("Multiple Choice");

        QuestionBox2.setEditable(false);
        QuestionBox2.setColumns(20);
        QuestionBox2.setRows(5);
        QuestionBox2.setText("Define Balls.");
        QuestionBoxScroll2.setViewportView(QuestionBox2);

        PointsPossible2.setText("Points: 25");

        MultipleChoiceGroup.add(MCAnswer1);
        MCAnswer1.setText("balls 1");
        MCAnswer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCAnswer1ActionPerformed(evt);
            }
        });

        MultipleChoiceGroup.add(MCAnswer2);
        MCAnswer2.setText("balls 2");
        MCAnswer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCAnswer2ActionPerformed(evt);
            }
        });

        MultipleChoiceGroup.add(MCAnswer3);
        MCAnswer3.setText("balls 3");
        MCAnswer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCAnswer3ActionPerformed(evt);
            }
        });

        MultipleChoiceGroup.add(MCAnswer4);
        MCAnswer4.setText("balls 4");
        MCAnswer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCAnswer4ActionPerformed(evt);
            }
        });

        MultipleChoiceGroup.add(MCAnswer5);
        MCAnswer5.setText("balls 5");
        MCAnswer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCAnswer5ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout MultipleChoiceCardLayout = new org.jdesktop.layout.GroupLayout(MultipleChoiceCard);
        MultipleChoiceCard.setLayout(MultipleChoiceCardLayout);
        MultipleChoiceCardLayout.setHorizontalGroup(
            MultipleChoiceCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(MultipleChoiceCardLayout.createSequentialGroup()
                .addContainerGap()
                .add(MultipleChoiceCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(MultipleChoiceCardLayout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(MultipleChoiceCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(MCAnswer1)
                            .add(MCAnswer2)
                            .add(MCAnswer3)
                            .add(MCAnswer4)
                            .add(MCAnswer5))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(MultipleChoiceCardLayout.createSequentialGroup()
                        .add(MultipleChoiceCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(QuestionBoxScroll2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1011, Short.MAX_VALUE)
                            .add(MultipleChoiceCardLayout.createSequentialGroup()
                                .add(QuestionPrompt2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 740, Short.MAX_VALUE)
                                .add(PointsPossible2))
                            .add(MultipleChoiceCardLayout.createSequentialGroup()
                                .add(AnswerPrompt2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(184, Short.MAX_VALUE))))
        );
        MultipleChoiceCardLayout.setVerticalGroup(
            MultipleChoiceCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(MultipleChoiceCardLayout.createSequentialGroup()
                .addContainerGap()
                .add(MultipleChoiceCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(QuestionPrompt2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(PointsPossible2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(QuestionBoxScroll2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(AnswerPrompt2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(MCAnswer1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(MCAnswer2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(MCAnswer3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(MCAnswer4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(MCAnswer5)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        QuestionCards.add(MultipleChoiceCard, "MultipleChoice");

        QuestionPrompt1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        QuestionPrompt1.setText("Question Prompt");

        AnswerPrompt1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        AnswerPrompt1.setText("Code");

        QuestionBox1.setEditable(false);
        QuestionBox1.setColumns(20);
        QuestionBox1.setRows(5);
        QuestionBox1.setText("Code balls");
        QuestionBoxScroll1.setViewportView(QuestionBox1);

        codeBox.setColumns(20);
        codeBox.setRows(5);
        codeBox.setName("CodeInput"); // NOI18N
        AnswerBoxScroll1.setViewportView(codeBox);

        PointsPossible1.setText("Points: 25");

        compileBtn.setText("Compile");
        compileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileBtnActionPerformed(evt);
            }
        });

        compilerOutput.setText("Compiler Output will be shown here");
        compilerOutput.setEnabled(false);
        jScrollPane1.setViewportView(compilerOutput);

        org.jdesktop.layout.GroupLayout CodingCardLayout = new org.jdesktop.layout.GroupLayout(CodingCard);
        CodingCard.setLayout(CodingCardLayout);
        CodingCardLayout.setHorizontalGroup(
            CodingCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(CodingCardLayout.createSequentialGroup()
                .addContainerGap()
                .add(CodingCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(QuestionBoxScroll1)
                    .add(CodingCardLayout.createSequentialGroup()
                        .add(QuestionPrompt1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(PointsPossible1))
                    .add(CodingCardLayout.createSequentialGroup()
                        .add(AnswerPrompt1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 811, Short.MAX_VALUE))
                    .add(CodingCardLayout.createSequentialGroup()
                        .add(AnswerBoxScroll1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 510, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 293, Short.MAX_VALUE)
                        .add(compileBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 304, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        CodingCardLayout.setVerticalGroup(
            CodingCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(CodingCardLayout.createSequentialGroup()
                .addContainerGap()
                .add(CodingCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(QuestionPrompt1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(PointsPossible1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(QuestionBoxScroll1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(AnswerPrompt1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CodingCardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(CodingCardLayout.createSequentialGroup()
                        .add(81, 81, 81)
                        .add(compileBtn))
                    .add(AnswerBoxScroll1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        QuestionCards.add(CodingCard, "Programming");

        jLabel2.setText("Thank you for taking the exam. Your exam has been saved.");

        exit.setText("Open Test");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout exitScreenLayout = new org.jdesktop.layout.GroupLayout(exitScreen);
        exitScreen.setLayout(exitScreenLayout);
        exitScreenLayout.setHorizontalGroup(
            exitScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(exitScreenLayout.createSequentialGroup()
                .addContainerGap(574, Short.MAX_VALUE)
                .add(exitScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, exitScreenLayout.createSequentialGroup()
                        .add(exit)
                        .add(371, 371, 371))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, exitScreenLayout.createSequentialGroup()
                        .add(jLabel2)
                        .add(254, 254, 254))))
        );
        exitScreenLayout.setVerticalGroup(
            exitScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(exitScreenLayout.createSequentialGroup()
                .add(87, 87, 87)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 293, Short.MAX_VALUE)
                .add(exit)
                .add(63, 63, 63))
        );

        QuestionCards.add(exitScreen, "exit");

        PrevNextControl.setBackground(java.awt.SystemColor.menu);

        Previous.setText("Previous");
        Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousActionPerformed(evt);
            }
        });

        QuestionNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        QuestionNumber.setText("1");

        Next.setText("Next");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout PrevNextControlLayout = new org.jdesktop.layout.GroupLayout(PrevNextControl);
        PrevNextControl.setLayout(PrevNextControlLayout);
        PrevNextControlLayout.setHorizontalGroup(
            PrevNextControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PrevNextControlLayout.createSequentialGroup()
                .addContainerGap()
                .add(Previous)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(QuestionNumber)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(Next, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PrevNextControlLayout.setVerticalGroup(
            PrevNextControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, PrevNextControlLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(PrevNextControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Previous)
                    .add(Next)
                    .add(QuestionNumber))
                .addContainerGap())
        );

        setJMenuBar(Menu);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PrevNextControl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(QuestionCards, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(QuestionCards, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PrevNextControl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveAnswer(String question) {
        if (question.equals("ShortAnswer")) {
            questions.get(questionIndex).setAnswer(AnswerBox.getText() + QuestionBox.getText());
        } else if (question.equals("Programming")) {
            questions.get(questionIndex).setAnswer(codeBox.getText());
            ((Programming)(questions.get(questionIndex))).setCompilerOutput(compilerOutput.getText());
        } else {
        }

    }

    private void setQuestionData(String question) {
        // Saving questions.get(questionIndex) would be usefully for not calling the function
        // so many times.
        QuestionBox.setEditable(true);
        if (question.equals("ShortAnswer")) {
            if (questionIndex < questions.size() - 1)
                QuestionBox.setText(questions.get(questionIndex + 1).getPrompt());
            else
                QuestionBox.setText(questions.get(questionIndex).getPrompt());

          
        } else if (question.equals("Programming")) {
            if (questionIndex < questions.size() - 1)
                QuestionBox1.setText(questions.get(questionIndex + 1).getPrompt());
            else
                QuestionBox1.setText(questions.get(questionIndex).getPrompt());
            
            //QuestionBox1.setText(questions.get(questionIndex + 1).getPrompt());
            
           
            codeBox.setText(questions.get(questionIndex).getAnswer());
            compilerOutput.setText("");
          
        } else { // Multiple Choice
            if (questionIndex < questions.size() - 1)
                QuestionBox2.setText(questions.get(questionIndex + 1).getPrompt());
            else
                QuestionBox2.setText(questions.get(questionIndex).getPrompt());
                        
            //QuestionBox2.setText(questions.get(questionIndex).getPrompt());
            
            
            MultipleChoice q = (MultipleChoice) questions.get(questionIndex);
            java.util.List<String> MCAnswers = new ArrayList<String>();
            MCAnswers = q.getChoices();

            int numRadios = 5;
            javax.swing.JRadioButton[] radioButtons = new javax.swing.JRadioButton[numRadios];
            radioButtons[0] = MCAnswer1;
            radioButtons[1] = MCAnswer2;
            radioButtons[2] = MCAnswer4;
            radioButtons[3] = MCAnswer3;
            radioButtons[4] = MCAnswer5;

            Iterator itr = MCAnswers.iterator();
            for (int i = 0; i < numRadios; i++) {
                if (itr.hasNext()) {
                    String choice = (String) itr.next();
                    radioButtons[i].setText(choice);
                    if (choice.equals(questions.get(questionIndex).getAnswer())) {
                        radioButtons[i].setSelected(true);
                    }
                } else {
                    radioButtons[i].setVisible(false);
                }
            }
        }
        
        CardLayout card = (CardLayout) QuestionCards.getLayout();
        card.show(QuestionCards, question);
        QuestionNumber.setText(String.valueOf(questionIndex + 1));
        QuestionNumber.repaint();
    }

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        saveAnswer(questions.get(questionIndex).getClass().getSimpleName());
        if (Next.getText().equals("Submit")) {
            saveTestObject();
            return;
        }
        
        if ( (questionIndex - 1) % 3 == 0 && questionIndex < questions.size() - 2)
            questionIndex += 2;
        else
            questionIndex++;
        
        if (questionIndex == questions.size() - 2) {
            Next.setText("Submit");
        }
        if (questionIndex == 1) {
            Previous.setEnabled(true);
        }

        setQuestionData(questions.get(questionIndex).getClass().getSimpleName());

    }//GEN-LAST:event_NextActionPerformed

    private void PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousActionPerformed
        saveAnswer(questions.get(questionIndex).getClass().getSimpleName());
        if ( (questionIndex) % 3 == 0 && questionIndex > 1)
            questionIndex -= 2;
        else
            questionIndex--;
        
        if (questionIndex == questions.size() - 2) {
            Next.setText("Next");
        }

        if (questionIndex == 0) {
            Previous.setEnabled(false);
        }
        setQuestionData(questions.get(questionIndex).getClass().getSimpleName());

    }//GEN-LAST:event_PreviousActionPerformed

    private void compileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileBtnActionPerformed
        // TODO: Save answerbox to file and version it.
        Programming question = (Programming) questions.get(questionIndex);
        question.setPtsEarned(question.getPtsEarned() - 1);
        Language language = question.getLang();
        String fileName = question.getFile();
        String studentCode = codeBox.getText();
        numberOfCompiles++;
        BufferedWriter writer1 = null, writer2 = null;
        try {
            writer1 = new BufferedWriter(new FileWriter("automation/" + fileName + "." + language.toString().toLowerCase()));
            writer1.write(studentCode);
          
            writer2 = new BufferedWriter(new FileWriter("automation/"+ fileName + "V" + numberOfCompiles + ".java"));
            writer2.write(studentCode);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (writer1 != null || writer2 != null) {
                try {
                    writer1.close();
                    writer2.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }

        if((numberOfCompiles - 1) % 2 == 0)
            compilerOutput.setText(Compile.compile(fileName));

    }//GEN-LAST:event_compileBtnActionPerformed

   
    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        if(openBool == false) {
            openBool = !openBool;
            return;
        }
        
        if (firstNameText.getText().equals("")) {
            nameError.setText("Please enter Both a First and Last name!");
            nameError.setVisible(true);
        } else {

            int returnVal = fc.showOpenDialog(StudentTestify.this);

           
                File file = fc.getSelectedFile();
                test = getTestObject(file);
                if (test == null) {
                    nameError.setVisible(true);
                } else {
                    questions = (ArrayList<Question>) test.getQuestions();
                    if (questions.size() == 1) {
                        Next.setText("Submit");
                    }
                    PrevNextControl.setVisible(true);
                    setQuestionData(questions.get(questionIndex).getClass().getSimpleName());
                    

                }
            
        }
    }//GEN-LAST:event_openActionPerformed

    private Test getTestObject(File f) {
        try {
            return (Test) new ObjectInputStream(new FileInputStream(f)).readObject();
        } catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }

    private void saveTestObject() {
        String last = firstNameText.getText();
        String first = lastNameText.getText();
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(new File(first + "_" + last))); //Select where you wish to save the file...
            oos.writeObject(test); // write the class as an 'object'
            oos.flush(); // flush the stream to insure all of the information was written to 'save.bin'
           // oos.close();// close the stream
            CardLayout card = (CardLayout) QuestionCards.getLayout();
            card.show(QuestionCards, "exit");
            //PrevNextControl.setVisible(false);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void lastNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextActionPerformed

    private void firstNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        //System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void MCAnswer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCAnswer1ActionPerformed
        // TODO add your handling code here:
        questions.get(questionIndex).setAnswer(MCAnswer2.getText());

    }//GEN-LAST:event_MCAnswer1ActionPerformed

    private void MCAnswer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCAnswer2ActionPerformed
        // TODO add your handling code here:
        questions.get(questionIndex).setAnswer(MCAnswer1.getText());
    }//GEN-LAST:event_MCAnswer2ActionPerformed

    private void MCAnswer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCAnswer3ActionPerformed
        // TODO add your handling code here:
        questions.get(questionIndex).setAnswer(MCAnswer3.getText());
    }//GEN-LAST:event_MCAnswer3ActionPerformed

    private void MCAnswer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCAnswer4ActionPerformed
        // TODO add your handling code here:
        questions.get(questionIndex).setAnswer(MCAnswer4.getText());
    }//GEN-LAST:event_MCAnswer4ActionPerformed

    private void MCAnswer5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCAnswer5ActionPerformed
        // TODO add your handling code here:
        questions.get(questionIndex).setAnswer(MCAnswer5.getText());
    }//GEN-LAST:event_MCAnswer5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentTestify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentTestify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentTestify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentTestify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentTestify().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AnswerBox;
    private javax.swing.JScrollPane AnswerBoxScroll;
    private javax.swing.JScrollPane AnswerBoxScroll1;
    private javax.swing.JLabel AnswerPrompt;
    private javax.swing.JLabel AnswerPrompt1;
    private javax.swing.JLabel AnswerPrompt2;
    private javax.swing.JPanel CodingCard;
    private javax.swing.JRadioButton MCAnswer1;
    private javax.swing.JRadioButton MCAnswer2;
    private javax.swing.JRadioButton MCAnswer3;
    private javax.swing.JRadioButton MCAnswer4;
    private javax.swing.JRadioButton MCAnswer5;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JPanel MultipleChoiceCard;
    private javax.swing.ButtonGroup MultipleChoiceGroup;
    private javax.swing.JButton Next;
    private javax.swing.JLabel PointsPossible;
    private javax.swing.JLabel PointsPossible1;
    private javax.swing.JLabel PointsPossible2;
    private javax.swing.JPanel PrevNextControl;
    private javax.swing.JButton Previous;
    private javax.swing.JTextArea QuestionBox;
    private javax.swing.JTextArea QuestionBox1;
    private javax.swing.JTextArea QuestionBox2;
    private javax.swing.JScrollPane QuestionBoxScroll;
    private javax.swing.JScrollPane QuestionBoxScroll1;
    private javax.swing.JScrollPane QuestionBoxScroll2;
    private javax.swing.JPanel QuestionCards;
    private javax.swing.JLabel QuestionNumber;
    private javax.swing.JLabel QuestionPrompt;
    private javax.swing.JLabel QuestionPrompt1;
    private javax.swing.JLabel QuestionPrompt2;
    private javax.swing.JPanel ShortAnswerCard;
    private javax.swing.JPanel StartExam;
    private javax.swing.JTextArea codeBox;
    private javax.swing.JButton compileBtn;
    private javax.swing.JTextPane compilerOutput;
    private javax.swing.JButton exit;
    private javax.swing.JPanel exitScreen;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JLabel nameError;
    private javax.swing.JButton open;
    // End of variables declaration//GEN-END:variables
    private JFileChooser fc = new JFileChooser();
    private Test test;
    private ArrayList<Question> questions;
    private int questionIndex = 1;
    private int numberOfCompiles = 0;
    private boolean openBool = false;
}
